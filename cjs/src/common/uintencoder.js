"use strict";Object.defineProperty(exports,"__esModule",{value:!0});exports.Uint8ArrayEncoder=class{static encode(t){if(t.length>31)throw new Error("Array length exceeds limit");let n=BigInt(t.length);for(let e=0;e<t.length;e++){n|=BigInt(t[e])<<BigInt(8*(e+1))}return n}static decode(t){const n=Number(t&BigInt(255)),e=new Array(n);let r=t>>BigInt(8);for(let t=0;t<n;t++)e[t]=Number(r&BigInt(255)),r>>=BigInt(8);return e}},exports.Uint8ArrayUint128Encoder=class{static encode(t,n){if(n.length>15)throw new Error("Array length exceeds limit");let e=t;e|=BigInt(n.length)<<128n;for(let t=0;t<n.length;t++){e|=BigInt(n[t])<<136n+8n*BigInt(t)}return e}static decode(t){const n=t&(1n<<128n)-1n,e=Number(t>>128n&0xffn),r=[];let i=t>>136n;for(let t=0;t<e;t++)r.push(Number(0xffn&i)),i>>=8n;return[n,r]}},exports.Uint8ArrayUint64And128Encoder=class{static encode(t,n,e){if(e.length>7)throw new Error("Array length exceeds limit");let r=t;r|=n<<BigInt(64),r|=BigInt(e.length)<<BigInt(64)+BigInt(128);for(let t=0;t<e.length;t++){r|=BigInt(e[t])<<BigInt(64)+BigInt(128)+BigInt(8)+BigInt(8*t)}return r}static decode(t){const n=t&(BigInt(1)<<BigInt(64))-BigInt(1),e=t>>BigInt(64)&(BigInt(1)<<BigInt(128))-BigInt(1),r=Number(t>>BigInt(64)+BigInt(128)&BigInt(255)),i=[];for(let n=0;n<r;n++){const e=Number(t>>BigInt(64)+BigInt(128)+BigInt(8)+BigInt(8*n)&BigInt(255));i.push(e)}return[n,e,i]}};
