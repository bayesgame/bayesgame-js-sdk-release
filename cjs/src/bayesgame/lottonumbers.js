"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./abi/LottoNumbers.json.js"),e=require("../erc1155.js"),r=require("./network.js");class s extends e.ERC1155{constructor(e,s){const a=r.getNetworkMeta(e.chainId);super(e,s??a.LottoNumbers,t.default),this.contract=this.contract,this.networkMeta=a}async getUserTokens(t){return(await this.contract.getUserTokens(t)).map((t=>t.toString()))}async getTotalSupplies(){return(await this.contract.getTotalSupplies()).map((t=>t.toString()))}async totalSupply(t){return(await this.contract.totalSupply(t)).toString()}async maxId(){return await this.contract.maxId()}async _info(){if(this.chain.isZeroAddress(this.address))throw new Error("invlaid erc1155 address");const[t,e]=await Promise.all([this.contract.name(),this.contract.symbol()]);let r={standard:"erc1155",address:this.address,name:t,symbol:e,decimals:0};return this.chain.setToken(this.address,r),r}setSigner(t){this.signer=t}}exports.LottoNumbers=s,exports.getLottoNumbers=function(t,e){const a=r.getNetworkMeta(t.chainId);return e||(e=a.LottoNumbers.toLowerCase()),t.getContract(e)||new s(t,e),t.getContract(e)};
