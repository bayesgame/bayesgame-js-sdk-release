"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("./abi/Jackpot.json.js"),e=require("../common/transaction.js"),a=require("../contract.js"),r=require("./network.js");class n extends a.BaseContract{constructor(e,a){const n=r.getNetworkMeta(e.chainId);super(e,a??n.Jackpot,t.default),this.contract=this.contract,this.networkMeta=n}join(t){return e.getTransactionMethods(this.contract,"join",[t])}batchJoin(t){return e.getTransactionMethods(this.contract,"batchJoin",[t])}clearing(t,a){return e.getTransactionMethods(this.contract,"clearing",[t,a])}clearingAndClaim(t,a){return e.getTransactionMethods(this.contract,"clearingAndClaim",[t,a])}claimBonuses(t){return e.getTransactionMethods(this.contract,"claimBonuses",[t])}batchClaimBonuses(t){return e.getTransactionMethods(this.contract,"batchClaimBonuses",[t])}async totalPool(){return await this.contract.totalPool()}async clearingFeeRate(){return(await this.contract.clearingFeeRate()).div(1e4).toNumber()}async queryClearing(t,e){return await this.contract.queryClearing(t,e)}async batchQueryClearing(t,e){return await this.contract.batchQueryClearing(t,e)}async queryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async batchQueryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async getBalance(t){return await this.contract.getBalance(t)}setSigner(t){this.signer=t}}exports.Jackpot=n,exports.getJackpot=function(t,e){const a=r.getNetworkMeta(t.chainId);return e||(e=a.Jackpot.toLowerCase()),t.contractmaps[e.toLowerCase()]||new n(t,e),t.contractmaps[e.toLowerCase()]};
