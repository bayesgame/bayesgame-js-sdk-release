"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("ethers"),e=require("./abi/Jackpot.json.js"),a=require("../common/transaction.js"),r=require("../contract.js"),n=require("./network.js");class c extends r.BaseContract{constructor(t,a){const r=n.getNetworkMeta(t.chainId);super(t,a??r.Jackpot,e.default),this.contract=this.contract,this.networkMeta=r}join(t){return a.getTransactionMethods(this.contract,"join",[t])}batchJoin(t){return a.getTransactionMethods(this.contract,"batchJoin",[t])}clearing(t,e){return a.getTransactionMethods(this.contract,"clearing",[t,e])}clearingAndClaim(t,e){return a.getTransactionMethods(this.contract,"clearingAndClaim",[t,e])}claimBonuses(e){const r={value:t.BigNumber.from(0)};return a.getTransactionMethods(this.contract,"claimBonuses",[e,r])}batchClaimBonuses(e){const r={value:t.BigNumber.from(0)};return a.getTransactionMethods(this.contract,"batchClaimBonuses",[e,r])}async totalPool(){return await this.contract.totalPool()}async clearingFeeRate(){return(await this.contract.clearingFeeRate()).div(1e4).toNumber()}async queryClearing(t,e){return await this.contract.queryClearing(t,e)}async batchQueryClearing(t,e){return await this.contract.batchQueryClearing(t,e)}async poolsBonuses(t){return await this.contract.poolsBonuses(t)}async queryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async batchQueryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async getBalance(t){return await this.contract.getBalance(t)}setSigner(t){this.signer=t}}exports.Jackpot=c,exports.getJackpot=function(t,e){const a=n.getNetworkMeta(t.chainId);return e||(e=a.Jackpot.toLowerCase()),t.getContract(e)||new c(t,e),t.getContract(e)};
