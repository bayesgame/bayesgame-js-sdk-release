"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("ethers"),e=require("./abi/Portal.json.js"),a=require("../common/transaction.js"),r=require("../common/signature-helper.js"),s=require("../common/format.js"),n=require("../contract.js"),i=require("./network.js");class c extends n.BaseContract{constructor(t,a){const r=i.getNetworkMeta(t.chainId);super(t,a??r.Portal,e.default),this.contract=this.contract,this.networkMeta=r}async register(e,r,s,n){const i={value:t.BigNumber.from(0)};return this.chain.gasPrice&&(i.gasPrice=this.chain.gasPrice),a.getTransactionMethods(this.contract,"register",[e,r,s,n,i])}mintKey(e,r,s,n,i){const c={value:t.BigNumber.from(e)};return this.chain.gasPrice&&(c.gasPrice=this.chain.gasPrice),a.getTransactionMethods(this.contract,"mintKey",[r,s,n,i,c])}mintKeys(e,r,s,n,i){const c={value:t.BigNumber.from(e)};return this.chain.gasPrice&&(c.gasPrice=this.chain.gasPrice),a.getTransactionMethods(this.contract,"mintKeys",[r,s,n,i,c])}makeTicket(e){const r={value:t.BigNumber.from(0)};return this.chain.gasPrice&&(r.gasPrice=this.chain.gasPrice),a.getTransactionMethods(this.contract,"makeTicket",[e,r])}makeTickets(e){const r={value:t.BigNumber.from(0)};return this.chain.gasPrice&&(r.gasPrice=this.chain.gasPrice),a.getTransactionMethods(this.contract,"makeTickets",[e,r])}claimBonuses(t,e){return a.getTransactionMethods(this.contract,"claimBonuses",[t,e])}batchClaimBonuses(t,e){return a.getTransactionMethods(this.contract,"batchClaimBonuses",[t,e])}async relationships(t){return t||(t=await this.chain.getAccount()),await this.contract.relationships(t)}async keySize(){return await this.contract.keySize()}async keyPrice(){return await this.contract.keyPrice()}async totalRound(){return await this.contract.totalRound()}async maxMintSize(){return await this.contract.maxMintSize()}async maxMintRang(){return await this.contract.maxMintRang()}async roundExpired(){return await this.contract.roundExpired()}async inviterBonusesRate(){return(await this.contract.inviterBonusesRate()).div(1e4).toNumber()}async treasuryBonusesRate(){return(await this.contract.treasuryBonusesRate()).div(1e4).toNumber()}async getPrizeRule(){const t=await this.contract.getPrizeRule();return{rates:t.rates.map((t=>t.div(1e4).toNumber())),maxs:t.maxs.map((t=>t.toString())),amounts:t.amounts.map((t=>t.toString()))}}async checkRound(t){return await this.contract.checkRound(t)}async matchLevel(t,e){return await this.contract.matchLevel(t,e)}async queryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async batchQueryBonuses(t,e){return await this.contract.queryBonuses(t,e)}async getCodes(t,e){return await this.contract.getCodes(t,e)}async getFormatCode(t){return await this.contract.getFormatCode(t)}async getFormatCodes(t,e){return await this.contract.getFormatCodes(t,e)}async getBalance(t){return await this.contract.getBalance(t)}async getRecord(t){return t=s.hexToBytes32(t),await this.contract.records(t)}async getRecords(t){const e=t.map((t=>s.hexToBytes32(t)));return await this.contract.getRecords(e)}setSigner(t){this.signer=t}async signRegisterData(t,e,a,n,i){if(!this.signer)throw new Error("no signer");n||(n=await this.chain.getAccount());const c=[t,e=s.hexToBytes32(e),a,n,this.chain.chainId,this.contract.address];return{user:n,inviter:t,sn:e,expired:a,signature:await r.getSignature(this.signer,["address","bytes32","uint256","address","uint256","address"],c,i)}}async signMintKeyData(t,e,a,n,i){if(!this.signer)throw new Error("no signer");n||(n=await this.chain.getAccount());const c=[t,e=s.hexToBytes32(e),a,n,this.chain.chainId,this.contract.address];return{user:n,random:t,sn:e,expired:a,signature:await r.getSignature(this.signer,["uint256","bytes32","uint256","address","uint256","address"],c,i)}}async signMintKeysData(t,e,a,n,i){if(!this.signer)throw new Error("no signer");n||(n=await this.chain.getAccount());const c=[t,e=s.hexToBytes32(e),a,n,this.chain.chainId,this.contract.address];return{user:n,randoms:t,sn:e,expired:a,signature:await r.getSignature(this.signer,["uint256[]","bytes32","uint256","address","uint256","address"],c,i)}}}exports.Portal=c,exports.getPortal=function(t,e){const a=i.getNetworkMeta(t.chainId);return e||(e=a.Portal.toLowerCase()),t.getContract(e)||new c(t,e),t.getContract(e)};
