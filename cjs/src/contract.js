"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("../node_modules/.pnpm/@0xsequence_multicall@0.41.3/node_modules/@0xsequence/multicall/dist/0xsequence-multicall.esm.js"),e=require("ethers");exports.BaseContract=class{constructor(t,i,s){if(!t)throw new Error("invalid chain");if(!i)throw new Error("invalid address");if(!s)throw new Error("invalid abi");this.chain=t,this.address=i.toLowerCase();const o=t.getProvider();if(!o)throw new Error("Either a provider or custom signer with provider must be provided");this.provider=o,this.multicallProvider=new r.providers.MulticallProvider(this.provider),this.contract=new e.Contract(i,s,this.multicallProvider),this.chain.register(this),this.provider instanceof e.providers.JsonRpcProvider&&this.connect()}connect(r){try{r||(r=this._getSigner(0)),this.contract=this.contract.connect(r)}catch(r){console.error("contract connect except",r)}return this}_getSigner(r){return this.chain.getSigner(r)}async getEvent(r,e="latest"){const t={address:this.address};return await this.contract.queryFilter(t,r,e)}};
