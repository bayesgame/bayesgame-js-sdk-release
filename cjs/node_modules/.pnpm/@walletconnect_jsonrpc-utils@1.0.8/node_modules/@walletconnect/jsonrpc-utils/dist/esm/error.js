"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("./constants.js");function e(e){return r.RESERVED_ERROR_CODES.includes(e)}function o(r){return"number"==typeof r}function R(e){const o=Object.values(r.STANDARD_ERROR_MAP).find((r=>r.code===e));return o||r.STANDARD_ERROR_MAP[r.DEFAULT_ERROR]}exports.getError=function(e){return Object.keys(r.STANDARD_ERROR_MAP).includes(e)?r.STANDARD_ERROR_MAP[e]:r.STANDARD_ERROR_MAP[r.DEFAULT_ERROR]},exports.getErrorByCode=R,exports.isReservedErrorCode=e,exports.isServerErrorCode=function(e){return e<=r.SERVER_ERROR_CODE_RANGE[0]&&e>=r.SERVER_ERROR_CODE_RANGE[1]},exports.isValidErrorCode=o,exports.parseConnectionError=function(r,e,o){return r.message.includes("getaddrinfo ENOTFOUND")||r.message.includes("connect ECONNREFUSED")?new Error(`Unavailable ${o} RPC url at ${e}`):r},exports.validateJsonRpcError=function(s){if(void 0===s.error.code)return{valid:!1,error:"Missing code for JSON-RPC error"};if(void 0===s.error.message)return{valid:!1,error:"Missing message for JSON-RPC error"};if(!o(s.error.code))return{valid:!1,error:`Invalid error code type for JSON-RPC: ${s.error.code}`};if(e(s.error.code)){const e=R(s.error.code);if(e.message!==r.STANDARD_ERROR_MAP[r.DEFAULT_ERROR].message&&s.error.message===e.message)return{valid:!1,error:`Invalid error code message for JSON-RPC: ${s.error.code}`}}return{valid:!0}};
