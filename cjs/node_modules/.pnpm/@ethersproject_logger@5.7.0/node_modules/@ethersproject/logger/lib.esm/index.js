"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var r=require("./_version.js");let e=!1,o=!1;const t={debug:1,default:2,info:2,warning:3,error:4,off:5};let s=t.default,E=null;const n=function(){try{const r=[];if(["NFD","NFC","NFKD","NFKC"].forEach((e=>{try{if("test"!=="test".normalize(e))throw new Error("bad normalize")}catch(o){r.push(e)}})),r.length)throw new Error("missing "+r.join(", "));if(String.fromCharCode(233).normalize("NFD")!==String.fromCharCode(101,769))throw new Error("broken implementation")}catch(r){return r.message}return null}();var N,a;exports.LogLevel=void 0,(N=exports.LogLevel||(exports.LogLevel={})).DEBUG="DEBUG",N.INFO="INFO",N.WARNING="WARNING",N.ERROR="ERROR",N.OFF="OFF",exports.ErrorCode=void 0,(a=exports.ErrorCode||(exports.ErrorCode={})).UNKNOWN_ERROR="UNKNOWN_ERROR",a.NOT_IMPLEMENTED="NOT_IMPLEMENTED",a.UNSUPPORTED_OPERATION="UNSUPPORTED_OPERATION",a.NETWORK_ERROR="NETWORK_ERROR",a.SERVER_ERROR="SERVER_ERROR",a.TIMEOUT="TIMEOUT",a.BUFFER_OVERRUN="BUFFER_OVERRUN",a.NUMERIC_FAULT="NUMERIC_FAULT",a.MISSING_NEW="MISSING_NEW",a.INVALID_ARGUMENT="INVALID_ARGUMENT",a.MISSING_ARGUMENT="MISSING_ARGUMENT",a.UNEXPECTED_ARGUMENT="UNEXPECTED_ARGUMENT",a.CALL_EXCEPTION="CALL_EXCEPTION",a.INSUFFICIENT_FUNDS="INSUFFICIENT_FUNDS",a.NONCE_EXPIRED="NONCE_EXPIRED",a.REPLACEMENT_UNDERPRICED="REPLACEMENT_UNDERPRICED",a.UNPREDICTABLE_GAS_LIMIT="UNPREDICTABLE_GAS_LIMIT",a.TRANSACTION_REPLACED="TRANSACTION_REPLACED",a.ACTION_REJECTED="ACTION_REJECTED";const i="0123456789abcdef";class l{constructor(r){Object.defineProperty(this,"version",{enumerable:!0,value:r,writable:!1})}_log(r,e){const o=r.toLowerCase();null==t[o]&&this.throwArgumentError("invalid log level name","logLevel",r),s>t[o]||console.log.apply(console,e)}debug(...r){this._log(l.levels.DEBUG,r)}info(...r){this._log(l.levels.INFO,r)}warn(...r){this._log(l.levels.WARNING,r)}makeError(r,e,t){if(o)return this.makeError("censored error",e,{});e||(e=l.errors.UNKNOWN_ERROR),t||(t={});const s=[];Object.keys(t).forEach((r=>{const e=t[r];try{if(e instanceof Uint8Array){let o="";for(let r=0;r<e.length;r++)o+=i[e[r]>>4],o+=i[15&e[r]];s.push(r+"=Uint8Array(0x"+o+")")}else s.push(r+"="+JSON.stringify(e))}catch(e){s.push(r+"="+JSON.stringify(t[r].toString()))}})),s.push(`code=${e}`),s.push(`version=${this.version}`);const E=r;let n="";switch(e){case exports.ErrorCode.NUMERIC_FAULT:{n="NUMERIC_FAULT";const e=r;switch(e){case"overflow":case"underflow":case"division-by-zero":n+="-"+e;break;case"negative-power":case"negative-width":n+="-unsupported";break;case"unbound-bitwise-result":n+="-unbound-result"}break}case exports.ErrorCode.CALL_EXCEPTION:case exports.ErrorCode.INSUFFICIENT_FUNDS:case exports.ErrorCode.MISSING_NEW:case exports.ErrorCode.NONCE_EXPIRED:case exports.ErrorCode.REPLACEMENT_UNDERPRICED:case exports.ErrorCode.TRANSACTION_REPLACED:case exports.ErrorCode.UNPREDICTABLE_GAS_LIMIT:n=e}n&&(r+=" [ See: https://links.ethers.org/v5-errors-"+n+" ]"),s.length&&(r+=" ("+s.join(", ")+")");const N=new Error(r);return N.reason=E,N.code=e,Object.keys(t).forEach((function(r){N[r]=t[r]})),N}throwError(r,e,o){throw this.makeError(r,e,o)}throwArgumentError(r,e,o){return this.throwError(r,l.errors.INVALID_ARGUMENT,{argument:e,value:o})}assert(r,e,o,t){r||this.throwError(e,o,t)}assertArgument(r,e,o,t){r||this.throwArgumentError(e,o,t)}checkNormalize(r){n&&this.throwError("platform missing String.prototype.normalize",l.errors.UNSUPPORTED_OPERATION,{operation:"String.prototype.normalize",form:n})}checkSafeUint53(r,e){"number"==typeof r&&(null==e&&(e="value not safe"),(r<0||r>=9007199254740991)&&this.throwError(e,l.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"out-of-safe-range",value:r}),r%1&&this.throwError(e,l.errors.NUMERIC_FAULT,{operation:"checkSafeInteger",fault:"non-integer",value:r}))}checkArgumentCount(r,e,o){o=o?": "+o:"",r<e&&this.throwError("missing argument"+o,l.errors.MISSING_ARGUMENT,{count:r,expectedCount:e}),r>e&&this.throwError("too many arguments"+o,l.errors.UNEXPECTED_ARGUMENT,{count:r,expectedCount:e})}checkNew(r,e){r!==Object&&null!=r||this.throwError("missing new",l.errors.MISSING_NEW,{name:e.name})}checkAbstract(r,e){r===e?this.throwError("cannot instantiate abstract class "+JSON.stringify(e.name)+" directly; use a sub-class",l.errors.UNSUPPORTED_OPERATION,{name:r.name,operation:"new"}):r!==Object&&null!=r||this.throwError("missing new",l.errors.MISSING_NEW,{name:e.name})}static globalLogger(){return E||(E=new l(r.version)),E}static setCensorship(r,t){if(!r&&t&&this.globalLogger().throwError("cannot permanently disable censorship",l.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"}),e){if(!r)return;this.globalLogger().throwError("error censorship permanent",l.errors.UNSUPPORTED_OPERATION,{operation:"setCensorship"})}o=!!r,e=!!t}static setLogLevel(r){const e=t[r.toLowerCase()];null!=e?s=e:l.globalLogger().warn("invalid log level - "+r)}static from(r){return new l(r)}}l.errors=exports.ErrorCode,l.levels=exports.LogLevel,exports.Logger=l;
