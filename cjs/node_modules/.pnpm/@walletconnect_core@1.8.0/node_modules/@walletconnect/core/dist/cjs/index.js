"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e,t=require("../../../../../../../../_virtual/index2.js"),s=require("../../../../../../../../_virtual/__tslib.js"),i=require("../../../../../../@walletconnect_utils@1.8.0/node_modules/@walletconnect/utils/dist/cjs/index.js"),r=require("../../../../../../@walletconnect_socket-transport@1.8.0/node_modules/@walletconnect/socket-transport/dist/cjs/index.js"),n=require("./errors.js"),o=require("./events.js"),a=require("./storage.js"),h=require("./url.js");exports.__require=function(){if(e)return t.__exports;e=1,Object.defineProperty(t.__exports,"__esModule",{value:!0});const c=s.default,d=i.__require(),_=c.__importDefault(r.__require()),p=n.__require(),u=c.__importDefault(o.__require()),l=c.__importDefault(a.__require()),g=h.__require();return t.__exports.default=class{constructor(e){if(this.protocol="wc",this.version=1,this._bridge="",this._key=null,this._clientId="",this._clientMeta=null,this._peerId="",this._peerMeta=null,this._handshakeId=0,this._handshakeTopic="",this._connected=!1,this._accounts=[],this._chainId=0,this._networkId=0,this._rpcUrl="",this._eventManager=new u.default,this._clientMeta=(0,d.getClientMeta)()||e.connectorOpts.clientMeta||null,this._cryptoLib=e.cryptoLib,this._sessionStorage=e.sessionStorage||new l.default(e.connectorOpts.storageId),this._qrcodeModal=e.connectorOpts.qrcodeModal,this._qrcodeModalOptions=e.connectorOpts.qrcodeModalOptions,this._signingMethods=[...d.signingMethods,...e.connectorOpts.signingMethods||[]],!e.connectorOpts.bridge&&!e.connectorOpts.uri&&!e.connectorOpts.session)throw new Error(p.ERROR_MISSING_REQUIRED);e.connectorOpts.bridge&&(this.bridge=(0,g.getBridgeUrl)(e.connectorOpts.bridge)),e.connectorOpts.uri&&(this.uri=e.connectorOpts.uri);const t=e.connectorOpts.session||this._getStorageSession();t&&(this.session=t),this.handshakeId&&this._subscribeToSessionResponse(this.handshakeId,"Session request rejected"),this._transport=e.transport||new _.default({protocol:this.protocol,version:this.version,url:this.bridge,subscriptions:[this.clientId]}),this._subscribeToInternalEvents(),this._initTransport(),e.connectorOpts.uri&&this._subscribeToSessionRequest(),e.pushServerOpts&&this._registerPushServer(e.pushServerOpts)}set bridge(e){e&&(this._bridge=e)}get bridge(){return this._bridge}set key(e){if(!e)return;const t=(0,d.convertHexToArrayBuffer)(e);this._key=t}get key(){if(this._key){return(0,d.convertArrayBufferToHex)(this._key,!0)}return""}set clientId(e){e&&(this._clientId=e)}get clientId(){let e=this._clientId;return e||(e=this._clientId=(0,d.uuid)()),this._clientId}set peerId(e){e&&(this._peerId=e)}get peerId(){return this._peerId}set clientMeta(e){}get clientMeta(){let e=this._clientMeta;return e||(e=this._clientMeta=(0,d.getClientMeta)()),e}set peerMeta(e){this._peerMeta=e}get peerMeta(){return this._peerMeta}set handshakeTopic(e){e&&(this._handshakeTopic=e)}get handshakeTopic(){return this._handshakeTopic}set handshakeId(e){e&&(this._handshakeId=e)}get handshakeId(){return this._handshakeId}get uri(){return this._formatUri()}set uri(e){if(!e)return;const{handshakeTopic:t,bridge:s,key:i}=this._parseUri(e);this.handshakeTopic=t,this.bridge=s,this.key=i}set chainId(e){this._chainId=e}get chainId(){return this._chainId}set networkId(e){this._networkId=e}get networkId(){return this._networkId}set accounts(e){this._accounts=e}get accounts(){return this._accounts}set rpcUrl(e){this._rpcUrl=e}get rpcUrl(){return this._rpcUrl}set connected(e){}get connected(){return this._connected}set pending(e){}get pending(){return!!this._handshakeTopic}get session(){return{connected:this.connected,accounts:this.accounts,chainId:this.chainId,bridge:this.bridge,key:this.key,clientId:this.clientId,clientMeta:this.clientMeta,peerId:this.peerId,peerMeta:this.peerMeta,handshakeId:this.handshakeId,handshakeTopic:this.handshakeTopic}}set session(e){e&&(this._connected=e.connected,this.accounts=e.accounts,this.chainId=e.chainId,this.bridge=e.bridge,this.key=e.key,this.clientId=e.clientId,this.clientMeta=e.clientMeta,this.peerId=e.peerId,this.peerMeta=e.peerMeta,this.handshakeId=e.handshakeId,this.handshakeTopic=e.handshakeTopic)}on(e,t){const s={event:e,callback:t};this._eventManager.subscribe(s)}off(e){this._eventManager.unsubscribe(e)}createInstantRequest(e){return c.__awaiter(this,void 0,void 0,(function*(){this._key=yield this._generateKey();const t=this._formatRequest({method:"wc_instantRequest",params:[{peerId:this.clientId,peerMeta:this.clientMeta,request:this._formatRequest(e)}]});this.handshakeId=t.id,this.handshakeTopic=(0,d.uuid)(),this._eventManager.trigger({event:"display_uri",params:[this.uri]}),this.on("modal_closed",(()=>{throw new Error(p.ERROR_QRCODE_MODAL_USER_CLOSED)}));const s=()=>{this.killSession()};try{const e=yield this._sendCallRequest(t);return e&&s(),e}catch(e){throw s(),e}}))}connect(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._qrcodeModal)throw new Error(p.ERROR_QRCODE_MODAL_NOT_PROVIDED);return this.connected?{chainId:this.chainId,accounts:this.accounts}:(yield this.createSession(e),new Promise(((e,t)=>c.__awaiter(this,void 0,void 0,(function*(){this.on("modal_closed",(()=>t(new Error(p.ERROR_QRCODE_MODAL_USER_CLOSED)))),this.on("connect",((s,i)=>{if(s)return t(s);e(i.params[0])}))})))))}))}createSession(e){return c.__awaiter(this,void 0,void 0,(function*(){if(this._connected)throw new Error(p.ERROR_SESSION_CONNECTED);if(this.pending)return;this._key=yield this._generateKey();const t=this._formatRequest({method:"wc_sessionRequest",params:[{peerId:this.clientId,peerMeta:this.clientMeta,chainId:e&&e.chainId?e.chainId:null}]});this.handshakeId=t.id,this.handshakeTopic=(0,d.uuid)(),this._sendSessionRequest(t,"Session update rejected",{topic:this.handshakeTopic}),this._eventManager.trigger({event:"display_uri",params:[this.uri]})}))}approveSession(e){if(this._connected)throw new Error(p.ERROR_SESSION_CONNECTED);this.chainId=e.chainId,this.accounts=e.accounts,this.networkId=e.networkId||0,this.rpcUrl=e.rpcUrl||"";const t={approved:!0,chainId:this.chainId,networkId:this.networkId,accounts:this.accounts,rpcUrl:this.rpcUrl,peerId:this.clientId,peerMeta:this.clientMeta},s={id:this.handshakeId,jsonrpc:"2.0",result:t};this._sendResponse(s),this._connected=!0,this._setStorageSession(),this._eventManager.trigger({event:"connect",params:[{peerId:this.peerId,peerMeta:this.peerMeta,chainId:this.chainId,accounts:this.accounts}]})}rejectSession(e){if(this._connected)throw new Error(p.ERROR_SESSION_CONNECTED);const t=e&&e.message?e.message:p.ERROR_SESSION_REJECTED,s=this._formatResponse({id:this.handshakeId,error:{message:t}});this._sendResponse(s),this._connected=!1,this._eventManager.trigger({event:"disconnect",params:[{message:t}]}),this._removeStorageSession()}updateSession(e){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);this.chainId=e.chainId,this.accounts=e.accounts,this.networkId=e.networkId||0,this.rpcUrl=e.rpcUrl||"";const t={approved:!0,chainId:this.chainId,networkId:this.networkId,accounts:this.accounts,rpcUrl:this.rpcUrl},s=this._formatRequest({method:"wc_sessionUpdate",params:[t]});this._sendSessionRequest(s,"Session update rejected"),this._eventManager.trigger({event:"session_update",params:[{chainId:this.chainId,accounts:this.accounts}]}),this._manageStorageSession()}killSession(e){return c.__awaiter(this,void 0,void 0,(function*(){const t=e?e.message:"Session Disconnected",s=this._formatRequest({method:"wc_sessionUpdate",params:[{approved:!1,chainId:null,networkId:null,accounts:null}]});yield this._sendRequest(s),this._handleSessionDisconnect(t)}))}sendTransaction(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);const t=(0,d.parseTransactionData)(e),s=this._formatRequest({method:"eth_sendTransaction",params:[t]});return yield this._sendCallRequest(s)}))}signTransaction(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);const t=(0,d.parseTransactionData)(e),s=this._formatRequest({method:"eth_signTransaction",params:[t]});return yield this._sendCallRequest(s)}))}signMessage(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);const t=this._formatRequest({method:"eth_sign",params:e});return yield this._sendCallRequest(t)}))}signPersonalMessage(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);e=(0,d.parsePersonalSign)(e);const t=this._formatRequest({method:"personal_sign",params:e});return yield this._sendCallRequest(t)}))}signTypedData(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);const t=this._formatRequest({method:"eth_signTypedData",params:e});return yield this._sendCallRequest(t)}))}updateChain(e){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error("Session currently disconnected");const t=this._formatRequest({method:"wallet_updateChain",params:[e]});return yield this._sendCallRequest(t)}))}unsafeSend(e,t){return this._sendRequest(e,t),this._eventManager.trigger({event:"call_request_sent",params:[{request:e,options:t}]}),new Promise(((t,s)=>{this._subscribeToResponse(e.id,((e,i)=>{if(e)s(e);else{if(!i)throw new Error(p.ERROR_MISSING_JSON_RPC);t(i)}}))}))}sendCustomRequest(e,t){return c.__awaiter(this,void 0,void 0,(function*(){if(!this._connected)throw new Error(p.ERROR_SESSION_DISCONNECTED);switch(e.method){case"eth_accounts":return this.accounts;case"eth_chainId":return(0,d.convertNumberToHex)(this.chainId);case"eth_sendTransaction":case"eth_signTransaction":e.params&&(e.params[0]=(0,d.parseTransactionData)(e.params[0]));break;case"personal_sign":e.params&&(e.params=(0,d.parsePersonalSign)(e.params))}const s=this._formatRequest(e);return yield this._sendCallRequest(s,t)}))}approveRequest(e){if(!(0,d.isJsonRpcResponseSuccess)(e))throw new Error(p.ERROR_MISSING_RESULT);{const t=this._formatResponse(e);this._sendResponse(t)}}rejectRequest(e){if(!(0,d.isJsonRpcResponseError)(e))throw new Error(p.ERROR_MISSING_ERROR);{const t=this._formatResponse(e);this._sendResponse(t)}}transportClose(){this._transport.close()}_sendRequest(e,t){return c.__awaiter(this,void 0,void 0,(function*(){const s=this._formatRequest(e),i=yield this._encrypt(s),r=void 0!==(null==t?void 0:t.topic)?t.topic:this.peerId,n=JSON.stringify(i),o=void 0!==(null==t?void 0:t.forcePushNotification)?!t.forcePushNotification:(0,d.isSilentPayload)(s);this._transport.send(n,r,o)}))}_sendResponse(e){return c.__awaiter(this,void 0,void 0,(function*(){const t=yield this._encrypt(e),s=this.peerId,i=JSON.stringify(t);this._transport.send(i,s,!0)}))}_sendSessionRequest(e,t,s){return c.__awaiter(this,void 0,void 0,(function*(){this._sendRequest(e,s),this._subscribeToSessionResponse(e.id,t)}))}_sendCallRequest(e,t){return this._sendRequest(e,t),this._eventManager.trigger({event:"call_request_sent",params:[{request:e,options:t}]}),this._subscribeToCallResponse(e.id)}_formatRequest(e){if(void 0===e.method)throw new Error(p.ERROR_MISSING_METHOD);return{id:void 0===e.id?(0,d.payloadId)():e.id,jsonrpc:"2.0",method:e.method,params:void 0===e.params?[]:e.params}}_formatResponse(e){if(void 0===e.id)throw new Error(p.ERROR_MISSING_ID);const t={id:e.id,jsonrpc:"2.0"};if((0,d.isJsonRpcResponseError)(e)){const s=(0,d.formatRpcError)(e.error);return Object.assign(Object.assign(Object.assign({},t),e),{error:s})}if((0,d.isJsonRpcResponseSuccess)(e)){return Object.assign(Object.assign({},t),e)}throw new Error(p.ERROR_INVALID_RESPONSE)}_handleSessionDisconnect(e){const t=e||"Session Disconnected";this._connected||(this._qrcodeModal&&this._qrcodeModal.close(),(0,d.removeLocal)(d.mobileLinkChoiceKey)),this._connected&&(this._connected=!1),this._handshakeId&&(this._handshakeId=0),this._handshakeTopic&&(this._handshakeTopic=""),this._peerId&&(this._peerId=""),this._eventManager.trigger({event:"disconnect",params:[{message:t}]}),this._removeStorageSession(),this.transportClose()}_handleSessionResponse(e,t){t&&t.approved?(this._connected?(t.chainId&&(this.chainId=t.chainId),t.accounts&&(this.accounts=t.accounts),this._eventManager.trigger({event:"session_update",params:[{chainId:this.chainId,accounts:this.accounts}]})):(this._connected=!0,t.chainId&&(this.chainId=t.chainId),t.accounts&&(this.accounts=t.accounts),t.peerId&&!this.peerId&&(this.peerId=t.peerId),t.peerMeta&&!this.peerMeta&&(this.peerMeta=t.peerMeta),this._eventManager.trigger({event:"connect",params:[{peerId:this.peerId,peerMeta:this.peerMeta,chainId:this.chainId,accounts:this.accounts}]})),this._manageStorageSession()):this._handleSessionDisconnect(e)}_handleIncomingMessages(e){return c.__awaiter(this,void 0,void 0,(function*(){if(![this.clientId,this.handshakeTopic].includes(e.topic))return;let t;try{t=JSON.parse(e.payload)}catch(e){return}const s=yield this._decrypt(t);s&&this._eventManager.trigger(s)}))}_subscribeToSessionRequest(){this._transport.subscribe(this.handshakeTopic)}_subscribeToResponse(e,t){this.on(`response:${e}`,t)}_subscribeToSessionResponse(e,t){this._subscribeToResponse(e,((e,s)=>{e?this._handleSessionResponse(e.message):(0,d.isJsonRpcResponseSuccess)(s)?this._handleSessionResponse(t,s.result):s.error&&s.error.message?this._handleSessionResponse(s.error.message):this._handleSessionResponse(t)}))}_subscribeToCallResponse(e){return new Promise(((t,s)=>{this._subscribeToResponse(e,((e,i)=>{e?s(e):(0,d.isJsonRpcResponseSuccess)(i)?t(i.result):i.error&&i.error.message?s(i.error):s(new Error(p.ERROR_INVALID_RESPONSE))}))}))}_subscribeToInternalEvents(){this.on("display_uri",(()=>{this._qrcodeModal&&this._qrcodeModal.open(this.uri,(()=>{this._eventManager.trigger({event:"modal_closed",params:[]})}),this._qrcodeModalOptions)})),this.on("connect",(()=>{this._qrcodeModal&&this._qrcodeModal.close()})),this.on("call_request_sent",((e,t)=>{const{request:s}=t.params[0];if((0,d.isMobile)()&&this._signingMethods.includes(s.method)){const e=(0,d.getLocal)(d.mobileLinkChoiceKey);e&&(window.location.href=e.href)}})),this.on("wc_sessionRequest",((e,t)=>{e&&this._eventManager.trigger({event:"error",params:[{code:"SESSION_REQUEST_ERROR",message:e.toString()}]}),this.handshakeId=t.id,this.peerId=t.params[0].peerId,this.peerMeta=t.params[0].peerMeta;const s=Object.assign(Object.assign({},t),{method:"session_request"});this._eventManager.trigger(s)})),this.on("wc_sessionUpdate",((e,t)=>{e&&this._handleSessionResponse(e.message),this._handleSessionResponse("Session disconnected",t.params[0])}))}_initTransport(){this._transport.on("message",(e=>this._handleIncomingMessages(e))),this._transport.on("open",(()=>this._eventManager.trigger({event:"transport_open",params:[]}))),this._transport.on("close",(()=>this._eventManager.trigger({event:"transport_close",params:[]}))),this._transport.on("error",(()=>this._eventManager.trigger({event:"transport_error",params:["Websocket connection failed"]}))),this._transport.open()}_formatUri(){return`${this.protocol}:${this.handshakeTopic}@${this.version}?bridge=${encodeURIComponent(this.bridge)}&key=${this.key}`}_parseUri(e){const t=(0,d.parseWalletConnectUri)(e);if(t.protocol===this.protocol){if(!t.handshakeTopic)throw Error("Invalid or missing handshakeTopic parameter value");const e=t.handshakeTopic;if(!t.bridge)throw Error("Invalid or missing bridge url parameter value");const s=decodeURIComponent(t.bridge);if(!t.key)throw Error("Invalid or missing key parameter value");return{handshakeTopic:e,bridge:s,key:t.key}}throw new Error(p.ERROR_INVALID_URI)}_generateKey(){return c.__awaiter(this,void 0,void 0,(function*(){if(this._cryptoLib){return yield this._cryptoLib.generateKey()}return null}))}_encrypt(e){return c.__awaiter(this,void 0,void 0,(function*(){const t=this._key;if(this._cryptoLib&&t){return yield this._cryptoLib.encrypt(e,t)}return null}))}_decrypt(e){return c.__awaiter(this,void 0,void 0,(function*(){const t=this._key;if(this._cryptoLib&&t){return yield this._cryptoLib.decrypt(e,t)}return null}))}_getStorageSession(){let e=null;return this._sessionStorage&&(e=this._sessionStorage.getSession()),e}_setStorageSession(){this._sessionStorage&&this._sessionStorage.setSession(this.session)}_removeStorageSession(){this._sessionStorage&&this._sessionStorage.removeSession()}_manageStorageSession(){this._connected?this._setStorageSession():this._removeStorageSession()}_registerPushServer(e){if(!e.url||"string"!=typeof e.url)throw Error("Invalid or missing pushServerOpts.url parameter value");if(!e.type||"string"!=typeof e.type)throw Error("Invalid or missing pushServerOpts.type parameter value");if(!e.token||"string"!=typeof e.token)throw Error("Invalid or missing pushServerOpts.token parameter value");const t={bridge:this.bridge,topic:this.clientId,type:e.type,token:e.token,peerName:"",language:e.language||""};this.on("connect",((s,i)=>c.__awaiter(this,void 0,void 0,(function*(){if(s)throw s;if(e.peerMeta){const e=i.params[0].peerMeta.name;t.peerName=e}try{const s=yield fetch(`${e.url}/new`,{method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(t)});if(!(yield s.json()).success)throw Error("Failed to register in Push Server")}catch(e){throw Error("Failed to register in Push Server")}}))))}},t.__exports};
