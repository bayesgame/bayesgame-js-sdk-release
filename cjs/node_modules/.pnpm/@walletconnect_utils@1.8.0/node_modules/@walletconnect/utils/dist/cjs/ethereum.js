"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("../../../../../../../../_virtual/ethereum.js");require("../../../../../../js-sha3@0.8.0/node_modules/js-sha3/src/sha3.js");var r,t=require("../../../../../../../../_virtual/index4.js"),i=require("./encoding.js"),s=require("./misc.js"),o=require("./validators.js"),a=require("../../../../../../../../_virtual/sha3.js");exports.__require=function(){return r||(r=1,function(e){Object.defineProperty(e,"__esModule",{value:!0}),e.parseTransactionData=e.parsePersonalSign=e.isValidAddress=e.toChecksumAddress=void 0;const r=a.sha3.exports,n=t.default,u=i.__require(),d=s.__require(),c=o.__require();function f(e){e=(0,n.removeHexPrefix)(e.toLowerCase());const t=(0,n.removeHexPrefix)((0,r.keccak_256)((0,u.convertUtf8ToBuffer)(e)));let i="";for(let r=0;r<e.length;r++)parseInt(t[r],16)>7?i+=e[r].toUpperCase():i+=e[r];return(0,n.addHexPrefix)(i)}e.toChecksumAddress=f;e.isValidAddress=e=>!!e&&("0x"===e.toLowerCase().substring(0,2)&&(!!/^(0x)?[0-9a-f]{40}$/i.test(e)&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||e===f(e)))),e.parsePersonalSign=function(e){return(0,c.isEmptyArray)(e)||(0,c.isHexString)(e[0])||(e[0]=(0,u.convertUtf8ToHex)(e[0])),e},e.parseTransactionData=function(r){if(void 0!==r.type&&"0"!==r.type)return r;if(void 0===r.from||!(0,e.isValidAddress)(r.from))throw new Error("Transaction object must include a valid 'from' value.");function t(e){let r=e;return("number"==typeof e||"string"==typeof e&&!(0,c.isEmptyString)(e))&&((0,c.isHexString)(e)?"string"==typeof e&&(r=(0,d.sanitizeHex)(e)):r=(0,u.convertNumberToHex)(e)),"string"==typeof r&&(r=(0,d.removeHexLeadingZeros)(r)),r}const i={from:(0,d.sanitizeHex)(r.from),to:void 0===r.to?void 0:(0,d.sanitizeHex)(r.to),gasPrice:void 0===r.gasPrice?"":t(r.gasPrice),gas:void 0===r.gas?void 0===r.gasLimit?"":t(r.gasLimit):t(r.gas),value:void 0===r.value?"":t(r.value),nonce:void 0===r.nonce?"":t(r.nonce),data:void 0===r.data?"":(0,d.sanitizeHex)(r.data)||"0x"},s=["gasPrice","gas","value","nonce"];return Object.keys(i).forEach((e=>{(void 0===i[e]||"string"==typeof i[e]&&!i[e].trim().length)&&s.includes(e)&&delete i[e]})),i}}(e.__exports)),e.__exports};
