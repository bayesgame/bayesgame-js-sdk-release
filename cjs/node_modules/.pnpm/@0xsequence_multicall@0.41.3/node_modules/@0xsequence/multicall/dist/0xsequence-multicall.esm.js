"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("ethers"),t=require("../../../../../@0xsequence_abi@0.41.3/node_modules/@0xsequence/abi/dist/0xsequence-abi.esm.js"),r=require("../../../../../@0xsequence_utils@0.41.3/node_modules/@0xsequence/utils/dist/0xsequence-utils.esm.js"),s=require("../../../../../@0xsequence_network@0.41.3/node_modules/@0xsequence/network/dist/0xsequence-network.esm.js");function a(){return a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},a.apply(this,arguments)}let i;function o(e,t){return e.reduce((function(e,r,s){return t(r,s)?e[0].push(r):e[1].push(r),e}),[[],[]])}!function(e){e.ethCall="eth_call",e.ethGetBalance="eth_getBalance",e.ethGetCode="eth_getCode"}(i||(i={}));const n={batchSize:50,timeWindow:50,contract:s.sequenceContext.sequenceUtils,verbose:!1};class l{constructor(n){var c=this;if(this.batchableJsonRpcMethods=[i.ethCall,i.ethGetCode,i.ethGetBalance],this.multicallInterface=new e.ethers.utils.Interface(t.walletContracts.sequenceUtils.abi),this.options=void 0,this.timeout=void 0,this.queue=[],this.scheduleExecution=()=>{this.queue.length>0&&(this.timeout&&clearTimeout(this.timeout),this.timeout=setTimeout(this.run,this.options.timeWindow))},this.handle=(e,t,r)=>this.batchableJsonRpcMethods.find((e=>e===t.method))?(this.queue.push({request:t,callback:r,next:e}),this.options.verbose&&console.log("Scheduling call",t.method),void this.scheduleExecution()):(this.options.verbose&&console.log("Forwarded call",t.method),e(t,r)),this.run=async function(){c.options.verbose&&console.log("Processing multicall");const t=Math.min(c.options.batchSize,c.queue.length);if(0===t)return;if(1===t)return c.forward(c.queue[0]),c.queue=[],void(c.options.verbose&&console.log("Skip multicall, single item"));c.options.verbose&&console.log("Resolving",t);var a=c.queue.slice(0,t);c.queue=t===c.queue.length?[]:c.queue.slice(t),c.options.verbose&&console.log("Updated queue",c.queue.length),0!==c.queue.length&&c.scheduleExecution();const n=a[0].next;let l;var[a,u]=o(a,(t=>{try{if(t.next!==n)return!1;switch(t.request.method){case i.ethCall:if(t.request.params[0].from||t.request.params[0].gasPrice||t.request.params[0].value)return!1;case i.ethGetBalance:case i.ethGetCode:const a=function(t){if(void 0===t)return"latest";switch(t){case"earliest":case"latest":case"pending":return t}return e.BigNumber.from(t)}(t.request.params[1]);if(void 0===l&&(l=a),(r=a)!==(s=l)&&!(e.BigNumber.isBigNumber(r)?e.BigNumber.isBigNumber(s)&&r.eq(s):!e.BigNumber.isBigNumber(s)&&r===s))return!1}return!0}catch(e){return!1}var r,s}));if(0!==u.length&&(c.options.verbose&&console.log("Forwarding incompatible calls",u.length),c.forward(u),0===a.length))return;let d=a.map((e=>{try{switch(e.request.method){case i.ethCall:return{delegateCall:!1,revertOnError:!1,target:e.request.params[0].to,data:e.request.params[0].data,gasLimit:e.request.params[0].gas?e.request.params[0].gas:0,value:0};case i.ethGetCode:return{delegateCall:!1,revertOnError:!1,target:c.options.contract,gasLimit:0,value:0,data:c.multicallInterface.encodeFunctionData(c.multicallInterface.getFunction("callCode"),[e.request.params[0]])};case i.ethGetBalance:return{delegateCall:!1,revertOnError:!1,target:c.options.contract,gasLimit:0,value:0,data:c.multicallInterface.encodeFunctionData(c.multicallInterface.getFunction("callBalanceOf"),[e.request.params[0]])};default:return null}}catch(e){return null}}));var[a,u]=o(a,((e,t)=>void 0!==d[t]));if(d=d.filter((e=>e)),0!==u.length&&(c.options.verbose&&console.log("Forwarding calls on error",u.length),c.forward(u),0===a.length))return;let h;try{h=c.multicallInterface.encodeFunctionData(c.multicallInterface.getFunction("multiCall"),[d])}catch(e){return void c.forward(a)}const p=r.getRandomInt(),m=await async function(e,t){try{return await e}catch(e){return t instanceof Function?t(e):t}}(r.promisify(n)({id:p,jsonrpc:s.JsonRpcVersion,method:i.ethCall,params:[{to:c.options.contract,value:0,data:h},e.BigNumber.isBigNumber(l)?l.toNumber():l]}),(e=>({jsonrpc:s.JsonRpcVersion,id:p,result:void 0,error:e})));if(m.error)return c.forward(a);let g;try{g=c.multicallInterface.decodeFunctionResult(c.multicallInterface.getFunction("multiCall"),m.result)}catch(e){return void c.forward(a)}c.options.verbose&&console.log("Got response for",a.length),a.forEach(((t,r)=>{if(g[0][r])switch(t.request.method){case i.ethCall:t.callback(void 0,{jsonrpc:t.request.jsonrpc,id:t.request.id,result:g[1][r]});break;case i.ethGetCode:t.callback(void 0,{jsonrpc:t.request.jsonrpc,id:t.request.id,result:e.ethers.utils.defaultAbiCoder.decode(["bytes"],g[1][r])[0]});break;case i.ethGetBalance:t.callback(void 0,{jsonrpc:t.request.jsonrpc,id:t.request.id,result:e.ethers.utils.defaultAbiCoder.decode(["uint256"],g[1][r])[0]})}else c.forward(t)}))},this.options=n?a({},l.DefaultOptions,n):l.DefaultOptions,this.options.batchSize<=0)throw new Error(`Invalid batch size of ${this.options.batchSize}`)}forward(e){Array.isArray(e)?e.forEach((e=>e.next(e.request,e.callback))):e.next(e.request,e.callback)}static isMulticall(e){return e&&void 0!==e.handle&&void 0!==e.conf&&l.isMulticallOptions(e.options)}static isMulticallOptions(e){return void 0!==e&&void 0!==e.batchSize&&void 0!==e.timeWindow&&void 0!==e.contract}}l.DefaultOptions=a({},n);const c=["getNetwork","getBlockNumber","getGasPrice","getTransactionCount","getStorageAt","sendTransaction","estimateGas","getBlock","getTransaction","getTransactionReceipt","getLogs","emit","litenerCount","addListener","removeListener","waitForTransaction","detectNetwork","getBlockWithTransactions"];class u extends e.ethers.providers.BaseProvider{constructor(t,r){var s;super(t.getNetwork()),s=this,this.provider=t,this.multicall=void 0,this.listenerCount=this.provider.listenerCount,this.getResolver=async function(t){const r=s.provider;if(r.getResolver){const a=await r.getResolver(await t);return a?new e.ethers.providers.Resolver(s,a.address,a.name):null}return r.getResolver(await t)},this.next=async function(e,t){try{switch(e.method){case i.ethCall:s.callback(e,t,await s.provider.call(e.params[0],e.params[1]));break;case i.ethGetCode:s.callback(e,t,await s.provider.getCode(e.params[0],e.params[1]));break;case i.ethGetBalance:s.callback(e,t,await s.provider.getBalance(e.params[0],e.params[1]))}}catch(r){s.callback(e,t,void 0,r)}},this.multicall=l.isMulticall(r)?r:new l(r),c.forEach((e=>{void 0!==t[e]&&(this[e]=(...r)=>t[e](...r))}))}callback(e,t,r,a){t(a,{jsonrpc:s.JsonRpcVersion,id:e.id,result:r,error:a})}async call(e,t){return this.rpcCall(i.ethCall,e,t)}async getCode(e,t){return this.rpcCall(i.ethGetCode,e,t)}async getBalance(e,t){return this.rpcCall(i.ethGetBalance,e,t)}async rpcCall(e,...t){const a=r.getRandomInt();return(await r.promisify(this.multicall.handle)(this.next,{jsonrpc:s.JsonRpcVersion,id:a,method:e,params:t})).result}}var d=Object.freeze({__proto__:null,ProxyMethods:c,MulticallProvider:u,MulticallExternalProvider:class{constructor(e,t){if(this.provider=e,this.multicall=void 0,this.multicall=l.isMulticall(t)?t:new l(t),e.send){const t=async function(t,r){e.send(t,r)};this.send=(e,r)=>{this.multicall.handle(t,e,r)}}if(e.sendAsync){const t=async function(t,r){e.sendAsync(t,r)};this.sendAsync=(e,r)=>{this.multicall.handle(t,e,r)}}}get isMetaMask(){return this.provider.isMetaMask}get isStatus(){return this.provider.isStatus}},multicallMiddleware:e=>t=>{const r=l.isMulticall(e)?e:new l(e);return(e,s)=>r.handle(t,e,s)}});exports.Multicall=l,exports.providers=d;
