"use strict";function e(){return e=Object.assign||function(e){for(var r=1;r<arguments.length;r++){var t=arguments[r];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e},e.apply(this,arguments)}Object.defineProperty(exports,"__esModule",{value:!0}),require("ethers"),require("../../../../../@0xsequence_utils@0.41.3/node_modules/@0xsequence/utils/dist/0xsequence-utils.esm.js");const r=(e,r=!1,t=!1)=>{if(!e)throw new Error("invalid network config: empty config");const n=[];if(Array.isArray(e)?n.push(...e):n.push(e),0===n.length){if(r)throw new Error("invalid network config: empty config");return!1}const o=n.map((e=>e.chainId)).sort(),i=o.filter(((e,r)=>o.indexOf(e)!==r));if(i.length>0){if(r)throw new Error(`invalid network config: duplicate chainIds ${i}`);return!1}n.forEach((e=>e.name=e.name.toLowerCase()));const a=n.map((e=>e.name)).sort(),s=a.filter(((e,r)=>a.indexOf(e)!==r));if(s.length>0){if(r)throw new Error(`invalid network config: duplicate network names ${s}`);return!1}let l=!1,c=!1;for(let e=0;e<n.length;e++){const o=n[e];if(!(o.rpcUrl&&""!==o.rpcUrl||o.provider)){if(r)throw new Error(`invalid network config for chainId ${o.chainId}: rpcUrl or provider must be provided`);return!1}if(!t&&!o.relayer){if(r)throw new Error(`invalid network config for chainId ${o.chainId}: relayer must be provided`);return!1}if(o.isDefaultChain){if(l){if(r)throw new Error(`invalid network config for chainId ${o.chainId}: DefaultChain is already set by another config`);return!1}l=!0}if(o.isAuthChain){if(c&&r)throw new Error(`invalid network config for chainId ${o.chainId}: AuthChain is already set by another config`);c=!0}}if(!l){if(r)throw new Error("invalid network config: DefaultChain must be set");return!1}if(!c){if(r)throw new Error("invalid network config: AuthChain must be set");return!1}return!0},t=(e,t=!1)=>(r(e,!0,t),e),n=e=>t(o(e)),o=e=>{if(!e)return[];const r=e.sort(((e,r)=>e.chainId===r.chainId?0:e.chainId<r.chainId?-1:1)),t=r.findIndex((e=>e.isDefaultChain));t>0&&r.splice(0,0,r.splice(t,1)[0]);const n=r.findIndex((e=>e.isAuthChain&&!0!==e.isDefaultChain));return n>0&&r.splice(1,0,r.splice(n,1)[0]),r},i=(e,r)=>"string"==typeof e?(r=r||{},e.replace(/\$\{\s*([$#@\-\d\w]+)\s*\}/gim,(function(e,t){let n=r[t];return n="function"==typeof n?n():null==n?"":"object"==typeof n||"symbol"==typeof n?n.toString():n.valueOf(),n}))):"";var a;exports.ChainId=void 0,(a=exports.ChainId||(exports.ChainId={}))[a.MAINNET=1]="MAINNET",a[a.ROPSTEN=3]="ROPSTEN",a[a.RINKEBY=4]="RINKEBY",a[a.GOERLI=5]="GOERLI",a[a.KOVAN=42]="KOVAN",a[a.POLYGON=137]="POLYGON",a[a.POLYGON_MUMBAI=80001]="POLYGON_MUMBAI",a[a.BSC=56]="BSC",a[a.BSC_TESTNET=97]="BSC_TESTNET",a[a.OPTIMISM=10]="OPTIMISM",a[a.OPTIMISM_TESTNET=69]="OPTIMISM_TESTNET",a[a.ARBITRUM=42161]="ARBITRUM",a[a.ARBITRUM_TESTNET=421611]="ARBITRUM_TESTNET",a[a.ARBITRUM_NOVA=42170]="ARBITRUM_NOVA",a[a.AVALANCHE=43114]="AVALANCHE",a[a.AVALANCHE_TESTNET=43113]="AVALANCHE_TESTNET",a[a.FANTOM=250]="FANTOM",a[a.FANTOM_TESTNET=4002]="FANTOM_TESTNET",a[a.GNOSIS=100]="GNOSIS",a[a.AURORA=1313161554]="AURORA",a[a.AURORA_TESTNET=1313161556]="AURORA_TESTNET";const s=e=>i("https://${network}-indexer.sequence.app",{network:e}),l=e=>i("https://${network}-relayer.sequence.app",{network:e}),c=e=>i("https://nodes.sequence.app/${network}",{network:e}),p={[exports.ChainId.MAINNET]:{chainId:exports.ChainId.MAINNET,name:"mainnet",title:"Ethereum",blockExplorer:{name:"Etherscan",rootUrl:"https://etherscan.io/"}},[exports.ChainId.ROPSTEN]:{chainId:exports.ChainId.ROPSTEN,name:"ropsten",title:"Ropsten",testnet:!0,blockExplorer:{name:"Etherscan (Ropsten)",rootUrl:"https://ropsten.etherscan.io/"}},[exports.ChainId.RINKEBY]:{chainId:exports.ChainId.RINKEBY,name:"rinkeby",title:"Rinkeby",testnet:!0,blockExplorer:{name:"Etherscan (Rinkeby)",rootUrl:"https://rinkeby.etherscan.io/"}},[exports.ChainId.GOERLI]:{chainId:exports.ChainId.GOERLI,name:"goerli",title:"Goerli",testnet:!0,blockExplorer:{name:"Etherscan (Goerli)",rootUrl:"https://goerli.etherscan.io/"}},[exports.ChainId.KOVAN]:{chainId:exports.ChainId.KOVAN,name:"kovan",title:"Kovan",testnet:!0,blockExplorer:{name:"Etherscan (Kovan)",rootUrl:"https://kovan.etherscan.io/"}},[exports.ChainId.POLYGON]:{chainId:exports.ChainId.POLYGON,name:"polygon",title:"Polygon",blockExplorer:{name:"Polygonscan",rootUrl:"https://polygonscan.com/"}},[exports.ChainId.POLYGON_MUMBAI]:{chainId:exports.ChainId.POLYGON_MUMBAI,name:"mumbai",title:"Polygon Mumbai",testnet:!0,blockExplorer:{name:"Polygonscan (Mumbai)",rootUrl:"https://mumbai.polygonscan.com/"}},[exports.ChainId.BSC]:{chainId:exports.ChainId.BSC,name:"bsc",title:"BNB Smart Chain",blockExplorer:{name:"BSCScan",rootUrl:"https://bscscan.com/"}},[exports.ChainId.BSC_TESTNET]:{chainId:exports.ChainId.BSC_TESTNET,name:"bsc-testnet",title:"BNB Smart Chain Testnet",testnet:!0,blockExplorer:{name:"BSCScan (Testnet)",rootUrl:"https://testnet.bscscan.com/"}},[exports.ChainId.OPTIMISM]:{chainId:exports.ChainId.OPTIMISM,name:"optimism",title:"Optimism",blockExplorer:{name:"Etherscan (Optimism)",rootUrl:"https://optimistic.etherscan.io/"}},[exports.ChainId.OPTIMISM_TESTNET]:{chainId:exports.ChainId.OPTIMISM_TESTNET,name:"optimism-testnet",title:"Optimistic Kovan",testnet:!0,blockExplorer:{name:"Etherscan (Optimism Testnet)",rootUrl:"https://kovan-optimistic.etherscan.io/"}},[exports.ChainId.ARBITRUM]:{chainId:exports.ChainId.ARBITRUM,name:"arbitrum",title:"Arbitrum One",blockExplorer:{name:"Arbiscan",rootUrl:"https://arbiscan.io/"}},[exports.ChainId.ARBITRUM_TESTNET]:{chainId:exports.ChainId.ARBITRUM_TESTNET,name:"arbitrum-testnet",title:"Arbitrum Testnet",testnet:!0,blockExplorer:{name:"Arbiscan (Testnet)",rootUrl:"https://testnet.arbiscan.io/"}},[exports.ChainId.ARBITRUM_NOVA]:{chainId:exports.ChainId.ARBITRUM_NOVA,name:"arbitrum-nova",title:"Arbitrum Nova",blockExplorer:{name:"Nova Explorer",rootUrl:"https://nova-explorer.arbitrum.io/"}},[exports.ChainId.AVALANCHE]:{chainId:exports.ChainId.AVALANCHE,name:"avalanche",title:"Avalanche",blockExplorer:{name:"Snowtrace",rootUrl:"https://snowtrace.io/"}},[exports.ChainId.AVALANCHE_TESTNET]:{chainId:exports.ChainId.AVALANCHE_TESTNET,name:"avalanche-testnet",title:"Avalanche Testnet",testnet:!0,blockExplorer:{name:"Snowtrace (Testnet)",rootUrl:"https://testnet.snowtrace.io/"}},[exports.ChainId.FANTOM]:{chainId:exports.ChainId.FANTOM,name:"fantom",title:"Fantom",blockExplorer:{name:"FTMScan",rootUrl:"https://ftmscan.com/"}},[exports.ChainId.FANTOM_TESTNET]:{chainId:exports.ChainId.FANTOM_TESTNET,name:"fantom-testnet",title:"Fantom Testnet",testnet:!0,blockExplorer:{name:"FTMScan (Testnet)",rootUrl:"https://testnet.ftmscan.com/"}},[exports.ChainId.GNOSIS]:{chainId:exports.ChainId.GNOSIS,name:"gnosis",title:"Gnosis Chain",blockExplorer:{name:"Gnosis Chain Explorer",rootUrl:"https://blockscout.com/xdai/mainnet/"}},[exports.ChainId.AURORA]:{chainId:exports.ChainId.AURORA,name:"aurora",title:"Aurora",blockExplorer:{name:"Aurora Explorer",rootUrl:"https://aurorascan.dev/"}},[exports.ChainId.AURORA_TESTNET]:{chainId:exports.ChainId.AURORA_TESTNET,name:"aurora-testnet",title:"Aurora Testnet",blockExplorer:{name:"Aurora Explorer (Testnet)",rootUrl:"https://testnet.aurorascan.dev/"}}};n([e({},p[exports.ChainId.MAINNET],{rpcUrl:c("mainnet"),relayer:{url:l("mainnet")},indexerUrl:s("mainnet")}),e({},p[exports.ChainId.POLYGON],{rpcUrl:c("polygon"),relayer:{url:l("polygon")},indexerUrl:s("polygon"),isDefaultChain:!0,isAuthChain:!0}),e({},p[exports.ChainId.BSC],{rpcUrl:c("bsc"),indexerUrl:s("bsc"),relayer:{url:l("bsc")}}),e({},p[exports.ChainId.AVALANCHE],{rpcUrl:c("avalanche"),indexerUrl:s("avalanche"),relayer:{url:l("avalanche")}}),e({},p[exports.ChainId.ARBITRUM],{rpcUrl:c("arbitrum"),indexerUrl:s("arbitrum"),relayer:{url:l("arbitrum")}}),e({},p[exports.ChainId.ARBITRUM_NOVA],{rpcUrl:c("arbitrum-nova"),indexerUrl:s("arbitrum-nova"),relayer:{url:l("arbitrum-nova")}}),e({},p[exports.ChainId.OPTIMISM],{rpcUrl:c("optimism"),indexerUrl:s("optimism"),relayer:{url:l("optimism")}})]),n([e({},p[exports.ChainId.RINKEBY],{rpcUrl:c("rinkeby"),relayer:{url:l("rinkeby")},indexerUrl:s("rinkeby")}),e({},p[exports.ChainId.GOERLI],{rpcUrl:c("goerli"),relayer:{url:l("goerli")},indexerUrl:s("goerli")}),e({},p[exports.ChainId.POLYGON_MUMBAI],{rpcUrl:c("mumbai"),relayer:{url:l("mumbai")},indexerUrl:s("mumbai"),isDefaultChain:!0,isAuthChain:!0}),e({},p[exports.ChainId.BSC_TESTNET],{rpcUrl:c("bsc-testnet"),relayer:{url:l("bsc-testnet")},indexerUrl:s("bsc-testnet")})]);exports.JsonRpcVersion="2.0",exports.ensureValidNetworks=t,exports.indexerURL=s,exports.isValidNetworkConfig=r,exports.networks=p,exports.nodesURL=c,exports.relayerURL=l,exports.sequenceContext={factory:"0xf9D09D634Fb818b05149329C1dcCFAeA53639d96",mainModule:"0xd01F11855bCcb95f88D7A48492F66410d4637313",mainModuleUpgradable:"0x7EFE6cE415956c5f80C6530cC6cc81b4808F6118",guestModule:"0x02390F3E6E5FD1C6786CB78FD3027C117a9955A7",sequenceUtils:"0xd130B43062D875a4B7aF3f8fc036Bc6e9D3E1B3E",libs:{requireFreshSigner:"0xE6B9B21C077F382333220a072e4c44280b873907"}},exports.sortNetworks=o,exports.stringTemplate=i,exports.validateAndSortNetworks=n;
