"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var e=require("events"),t=require("http");require("https"),require("net"),require("tls");var r=require("crypto"),s=require("./permessage-deflate.js"),o=require("./websocket.js"),n=require("./extension.js"),i=require("./constants.js");function c(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a,l,h=c(e),u=c(t),p=c(r);exports.__require=function(){if(l)return a;l=1;const e=h.default,t=u.default,{createHash:r}=p.default,c=s.__require(),d=o.__require(),{format:f,parse:v}=n.__require(),{GUID:m,kWebSocket:_}=i.__require(),g=/^[+/0-9A-Za-z]{22}==$/;function b(e){e._state=2,e.emit("close")}function k(){this.destroy()}function w(e,r,s,o){e.writable&&(s=s||t.STATUS_CODES[r],o={Connection:"close","Content-Type":"text/html","Content-Length":Buffer.byteLength(s),...o},e.write(`HTTP/1.1 ${r} ${t.STATUS_CODES[r]}\r\n`+Object.keys(o).map((e=>`${e}: ${o[e]}`)).join("\r\n")+"\r\n\r\n"+s)),e.removeListener("error",k),e.destroy()}function y(e){return e.trim()}return a=class extends e{constructor(e,r){if(super(),null==(e={maxPayload:104857600,perMessageDeflate:!1,handleProtocols:null,clientTracking:!0,verifyClient:null,noServer:!1,backlog:null,server:null,host:null,path:null,port:null,...e}).port&&!e.server&&!e.noServer||null!=e.port&&(e.server||e.noServer)||e.server&&e.noServer)throw new TypeError('One and only one of the "port", "server", or "noServer" options must be specified');if(null!=e.port?(this._server=t.createServer(((e,r)=>{const s=t.STATUS_CODES[426];r.writeHead(426,{"Content-Length":s.length,"Content-Type":"text/plain"}),r.end(s)})),this._server.listen(e.port,e.host,e.backlog,r)):e.server&&(this._server=e.server),this._server){const e=this.emit.bind(this,"connection");this._removeListeners=function(e,t){for(const r of Object.keys(t))e.on(r,t[r]);return function(){for(const r of Object.keys(t))e.removeListener(r,t[r])}}(this._server,{listening:this.emit.bind(this,"listening"),error:this.emit.bind(this,"error"),upgrade:(t,r,s)=>{this.handleUpgrade(t,r,s,e)}})}!0===e.perMessageDeflate&&(e.perMessageDeflate={}),e.clientTracking&&(this.clients=new Set),this.options=e,this._state=0}address(){if(this.options.noServer)throw new Error('The server is operating in "noServer" mode');return this._server?this._server.address():null}close(e){if(e&&this.once("close",e),2===this._state)return void process.nextTick(b,this);if(1===this._state)return;if(this._state=1,this.clients)for(const e of this.clients)e.terminate();const t=this._server;t&&(this._removeListeners(),this._removeListeners=this._server=null,null!=this.options.port)?t.close(b.bind(void 0,this)):process.nextTick(b,this)}shouldHandle(e){if(this.options.path){const t=e.url.indexOf("?");if((-1!==t?e.url.slice(0,t):e.url)!==this.options.path)return!1}return!0}handleUpgrade(e,t,r,s){t.on("error",k);const o=void 0!==e.headers["sec-websocket-key"]&&e.headers["sec-websocket-key"].trim(),n=+e.headers["sec-websocket-version"],i={};if("GET"!==e.method||"websocket"!==e.headers.upgrade.toLowerCase()||!o||!g.test(o)||8!==n&&13!==n||!this.shouldHandle(e))return w(t,400);if(this.options.perMessageDeflate){const r=new c(this.options.perMessageDeflate,!0,this.options.maxPayload);try{const t=v(e.headers["sec-websocket-extensions"]);t[c.extensionName]&&(r.accept(t[c.extensionName]),i[c.extensionName]=r)}catch(e){return w(t,400)}}if(this.options.verifyClient){const c={origin:e.headers[""+(8===n?"sec-websocket-origin":"origin")],secure:!(!e.socket.authorized&&!e.socket.encrypted),req:e};if(2===this.options.verifyClient.length)return void this.options.verifyClient(c,((n,c,a,l)=>{if(!n)return w(t,c||401,a,l);this.completeUpgrade(o,i,e,t,r,s)}));if(!this.options.verifyClient(c))return w(t,401)}this.completeUpgrade(o,i,e,t,r,s)}completeUpgrade(e,t,s,o,n,i){if(!o.readable||!o.writable)return o.destroy();if(o[_])throw new Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");if(this._state>0)return w(o,503);const a=["HTTP/1.1 101 Switching Protocols","Upgrade: websocket","Connection: Upgrade",`Sec-WebSocket-Accept: ${r("sha1").update(e+m).digest("base64")}`],l=new d(null);let h=s.headers["sec-websocket-protocol"];if(h&&(h=h.split(",").map(y),h=this.options.handleProtocols?this.options.handleProtocols(h,s):h[0],h&&(a.push(`Sec-WebSocket-Protocol: ${h}`),l._protocol=h)),t[c.extensionName]){const e=t[c.extensionName].params,r=f({[c.extensionName]:[e]});a.push(`Sec-WebSocket-Extensions: ${r}`),l._extensions=t}this.emit("headers",a,s),o.write(a.concat("\r\n").join("\r\n")),o.removeListener("error",k),l.setSocket(o,n,this.options.maxPayload),this.clients&&(this.clients.add(l),l.on("close",(()=>this.clients.delete(l)))),i(l,s)}}};
